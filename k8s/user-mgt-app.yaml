# K8S yaml file that will deploy the sample application which consists
# in API,Recat Web interface and a mongo Database exposed through API and an ingress that will be in another file for explanation purpose
# For thios example, database credentials have been written as clear text, it should not be put in production
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-mgt-web-app-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: user-mgt-web
  template:
    metadata:
      labels:
        component: user-mgt-web
    spec:
      containers:
        - name: user-mgt-web-app
          image: damnda/user-management-web-app:0.1
          resources:
             requests:
               memory: "64Mi"
               cpu: "250m"
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: user-mgt-web-app-cluster-ip-service
spec:
  type: ClusterIP
  selector:
    component: user-mgt-web
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-mgt-api-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: user-mgt-api
  template:
    metadata:
      labels:
        component: user-mgt-api
    spec:
      containers:
        - name: user-mgt-api
          image: damnda/user-management-api:0.1
          ports:
            - containerPort: 5000
          resources:
           limits:
             cpu: 500m
           requests:
            cpu: 200m
          env:
            - name: SERVER_PORT
              value: "5000"
            - name: DATABASE_HOST
              value: mongo-cluster-ip-service
            - name: DATABASE_PORT
              value: "27017"
            - name: DATABASE_NAME
              value: USER_DB
            - name: DATABASE_USER
              value: mongoadmin
            - name: DATABASE_PWD
              value: secret
---
apiVersion: v1
kind: Service
metadata:
  name: user-mgt-api-cluster-ip-service
spec:
  type: ClusterIP
  selector:
    component: user-mgt-api
  ports:
    - port: 5000
      targetPort: 5000
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo-deployment
spec:
  selector:
    matchLabels:
     component: mongo
  serviceName: "mongo"
  replicas: 1 
  template:
    metadata:
      labels:
        component: mongo
    spec:
      volumes:
        - name: mongo-storage
          persistentVolumeClaim:
            claimName: mongo-pvc
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongo
          image: mongo
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: mongoadmin
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: secret      
          volumeMounts:
            - mountPath: /data/db
              name: mongo-storage
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-cluster-ip-service
spec:
  type: ClusterIP
  selector:
    component: mongo
  ports:
    - port: 27017
      targetPort: 27017
